webpackJsonp([1,4],{1014:function(e,t,r){"use strict";var n=r(1),o=r(1016),a=r(48),i=r(1019),s=r(448),c=r(449);r.d(t,"DashboardModule",function(){return f});var m=this&&this.__decorate||function(e,t,r,n){var o,a=arguments.length,i=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,n);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,r,i):o(t,r))||i);return a>3&&i&&Object.defineProperty(t,r,i),i},d=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},f=function(){function e(){}return e=m([r.i(n.p)({imports:[a.c,s.c,s.d,c.a,i.a],declarations:[o.a],bootstrap:[o.a]}),d("design:paramtypes",[])],e)}()},1016:function(e,t,r){"use strict";var n=r(1),o=r(448),a=r(58),i=r(277);r.d(t,"a",function(){return m});var s=this&&this.__decorate||function(e,t,r,n){var o,a=arguments.length,i=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,n);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,r,i):o(t,r))||i);return a>3&&i&&Object.defineProperty(t,r,i),i},c=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},m=function(){function e(e,t){this.fb=e,this.store=t,this.feeds$=t.select("feed"),this.form=e.group({text:["",o.a.required],name:["",o.a.required]})}return e.prototype.submitFeed=function(){this.form.valid&&(this.store.dispatch({type:i.a,payload:this.form.value}),this.form.reset())},e.prototype.submitCommentOnFeed=function(e,t){t.valid&&(this.store.dispatch({type:i.b,payload:{id:e,comment:t.value}}),t.reset())},e.prototype.removeFeed=function(e){this.store.dispatch({type:i.c,payload:e})},e=s([r.i(n.q)({selector:"app-dashboard",template:r(1023),styles:[r(1021)]}),c("design:paramtypes",["function"==typeof(t="undefined"!=typeof o.b&&o.b)&&t||Object,"function"==typeof(m="undefined"!=typeof a.a&&a.a)&&m||Object])],e);var t,m}()},1019:function(e,t,r){"use strict";var n=r(276),o=r(1016);r.d(t,"a",function(){return i});var a=[{path:"",component:o.a}],i=n.a.forChild(a)},1021:function(e,t){e.exports=".feed{\r\n  border:2px dashed hsla(14, 100%, 53%, 0.6);\r\n  margin:0px 10px;\r\n  padding:10px;\r\n}\r\n\r\n.animation{\r\n  animation:fadeIn 2s;\r\n}\r\n\r\n.animation-comment{\r\n  animation:moveFromLeft 1s;\r\n}\r\n\r\n@keyframes fadeIn{\r\n  from{\r\n    opacity:0;\r\n  }\r\n  to{\r\n    opacity:1;\r\n  }\r\n}\r\n\r\n@keyframes moveFromLeft{\r\n  from{\r\n    transform:translateX(50%);\r\n  }\r\n  to{\r\n    transform:translateX(0);\r\n  }\r\n}\r\n\r\n.comments{\r\n  float:right;\r\n  width:50%;\r\n}\r\n\r\n.comment{\r\n  border-bottom:4px solid #05ffb0;\r\n  padding:10px;\r\n}\r\n\r\n.clear{\r\n  clear:both;\r\n}\r\n\r\n.field.error > *{\r\n  background:lightcoral;\r\n}\r\n\r\n"},1023:function(e,t){e.exports='<h2>Dashboard component</h2>\r\n\r\n<h3>Feeds</h3>\r\n<app-ui-notes *ngIf="!(feeds$ | async)?.length" type="info" text="No feed, add one."></app-ui-notes>\r\n\r\n<div class="feed animation" *ngFor="let item of feeds$ | async">\r\n  <a>{{item.name}}</a>\r\n  <div class="text">\r\n    {{item.text}}\r\n  </div>\r\n  <div class="actions">\r\n    <a class="reply"><button class="ui button icon basic red" (click)="removeFeed(item.id)">Remove</button></a>\r\n  </div>\r\n  <div class="comments">\r\n\r\n    <div class="comment animation animation-comment" *ngFor="let comment of item?.comments">\r\n      <div class="text">\r\n        {{comment.text}}\r\n      </div>\r\n    </div>\r\n\r\n    <form class="form" #commentForm="ngForm" (submit)="submitCommentOnFeed(item.id, commentForm)" [ngClass]="{\'error\': commentForm.errors && (commentForm.dirty || commentForm.touched)}">\r\n      <div class="field">\r\n        <input placeholder="Enter comment..." type="text" name="text" required ngModel />\r\n      </div>\r\n      <button [disabled]="!commentForm.valid" class="ui blue labeled submit icon button">\r\n        <i class="icon edit"></i> Add comment\r\n      </button>\r\n    </form>\r\n  </div>\r\n  <div class="clear"></div>\r\n</div>\r\n\r\n<br/>\r\n\r\n<form class="form" [formGroup]="form" [ngClass]="{\'error\': form.errors && (form.dirty || form.touched)}">\r\n  <div class="field" [ngClass]="{\'error\': form.get(\'name\').errors && (form.get(\'name\').dirty || form.get(\'name\').touched)}">\r\n    <input placeholder="Enter name..." type="text" formControlName="name" />\r\n  </div>\r\n  <div class="field" [ngClass]="{\'error\': form.get(\'text\').errors && (form.get(\'text\').dirty || form.get(\'text\').touched)}">\r\n    <textarea formControlName="text" placeholder="Enter text..."></textarea>\r\n  </div>\r\n  <button [disabled]="!form.valid" class="ui blue labeled submit icon button" (click)="submitFeed()">\r\n    <i class="icon edit"></i> Add Feed\r\n  </button>\r\n</form>\r\n'}});
//# sourceMappingURL=1.0def4286b4e396c129c4.bundle.map